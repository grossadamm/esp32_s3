# Jetson-Optimized Dockerfile using dusty-nv base images
FROM dustynv/l4t-pytorch:r36.4.0

# Install Node.js (use NodeSource repository for latest)
RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash - && \
    apt-get install -y nodejs && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Install PM2 for process management
RUN npm install -g pm2

# Set working directory
WORKDIR /app

# Copy package files for dependency installation
COPY package*.json ./
COPY voice-agent/package*.json ./voice-agent/
COPY mcp-servers/finance-mcp/package*.json ./mcp-servers/finance-mcp/
COPY mcp-servers/dev-tools-mcp/package*.json ./mcp-servers/dev-tools-mcp/

# Install Node.js dependencies (including devDependencies for build)
RUN npm ci && \
    cd voice-agent && npm ci && cd .. && \
    cd mcp-servers/finance-mcp && npm ci && cd ../.. && \
    cd mcp-servers/dev-tools-mcp && npm ci && cd ../..

# Copy application source
COPY . .

# Build TypeScript projects (ensure dev dependencies are available)
ENV NODE_ENV=development
RUN cd voice-agent && npm run build && cd .. && \
    cd mcp-servers/finance-mcp && npm run build && cd ../.. && \
    cd mcp-servers/dev-tools-mcp && npm run build && cd ../..

# Clean up dev dependencies after build to reduce image size
RUN cd voice-agent && npm prune --production && cd .. && \
    cd mcp-servers/finance-mcp && npm prune --production && cd ../.. && \
    cd mcp-servers/dev-tools-mcp && npm prune --production && cd ../..
ENV NODE_ENV=production

# Install additional ML packages (PyTorch already included in base image)
RUN pip3 install --no-cache-dir \
    openai-whisper \
    transformers \
    onnxruntime

# Create data and logs directories
RUN mkdir -p data logs uploads

# Set proper permissions
RUN chown -R root:root /app

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:3000/health || exit 1

# Default command - will be overridden by docker-compose
CMD ["pm2-runtime", "start", "ecosystem.config.js"] 